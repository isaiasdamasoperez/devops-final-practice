name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Si no tienes package-lock.json, usa npm install
      - name: Install deps
        run: npm install

      - name: Run tests
        run: npm test

  docker:
    needs: build-test
    runs-on: ubuntu-latest
    # Evita correr el job si faltan los secrets
    if: ${{ secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set image name
        # Construye IMAGE_NAME correctamente con tu usuario
        run: echo "IMAGE_NAME=${DOCKERHUB_USERNAME}/hello-ci" >> $GITHUB_ENV
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

      - name: Log in to Docker Hub
        run: echo "${DOCKERHUB_TOKEN}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image
        run: |
          docker build -t "${IMAGE_NAME}:latest" -t "${IMAGE_NAME}:${{ github.sha }}" .

      - name: Push image
        run: |
          docker push "${IMAGE_NAME}:latest"
          docker push "${IMAGE_NAME}:${{ github.sha }}"

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    # Solo si definiste el hook de Render
    if: ${{ secrets.RENDER_DEPLOY_HOOK_URL != '' }}
    steps:
      - name: Trigger Render Deploy Hook
        run: curl -X POST "${RENDER_DEPLOY_HOOK_URL}"
        env:
          RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
