name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Usa npm install si no has commiteado package-lock.json
      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Run tests
        run: npm test

  docker:
    needs: build-test
    runs-on: ubuntu-latest
    # Mapea secrets a env a nivel de job
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute IMAGE_NAME
        # Solo construye IMAGE_NAME si hay usuario
        if: ${{ env.DOCKERHUB_USERNAME != '' }}
        run: echo "IMAGE_NAME=${DOCKERHUB_USERNAME}/hello-ci" >> "$GITHUB_ENV"

      - name: Log in to Docker Hub
        if: ${{ env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != '' }}
        run: |
          echo "${DOCKERHUB_TOKEN}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin

      - name: Build image
        if: ${{ env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != '' }}
        run: |
          docker build -t "${IMAGE_NAME}:latest" -t "${IMAGE_NAME}:${{ github.sha }}" .

      - name: Push image
        if: ${{ env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != '' }}
        run: |
          docker push "${IMAGE_NAME}:latest"
          docker push "${IMAGE_NAME}:${{ github.sha }}"

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    env:
      RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
    steps:
      - name: Trigger Render Deploy Hook
        if: ${{ env.RENDER_DEPLOY_HOOK_URL != '' }}
        run: curl -X POST "${RENDER_DEPLOY_HOOK_URL}"
